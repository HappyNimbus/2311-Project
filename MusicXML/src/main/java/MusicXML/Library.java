
/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MusicXML;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Scanner;
import java.io.IOException;
import java.io.*;
import java.io.File;
import java.awt.*;
import javax.swing.*;

//Not all of the above are needed, they are there just in case.

public class Library {
	
	public static void main (String[] args) throws Exception{
		


		File file = new File("test.txt");
		FileScanner read = new FileScanner(file);
			// ------------------------------------------------------------------------------------------------------------
			// find spaces between bars (Consult FileScanner Class)
			System.out.println("Length of one line: " + read.LineLength(0));

						
			read.SpaceCounter(); // Count the number of spaces in each bar & count how many bars there are (Evokes void method)
			
			System.out.println("Number of spaces in the first bar: " + read.spacesBetweenBar);		
			
			System.out.println("The key of the third string is: " + read.KeyFinder(2));
			
			// one problem that might arise, user might have different spacing for the bars (e.g. first bar has 26 spaces, second has 25)
			// ------------------------------------------------------------------------------------------------------------
			// parse bars into string arrays
			
			read.getLines();
			
			// for testing purposes ONLY, the following line is only applicable for files with 4 measures 
			int counter = 0;
			for(int i = 2; i < read.measures.size(); i = i + read.measures.size()/6) {		// take every 4th entry of the linkedlist because each line in the file has 4 measures (will need to make into a method that is more general)
		 		char[] measureToChar = read.measures.get(i).toCharArray();
		 		for(int j = 0; j < measureToChar.length; j++) {
					if(Character.isDigit(measureToChar[j])) {
						System.out.println("String " + read.KeyFinder(counter) + ", Index " + j + ", Note " + measureToChar[j]);
					}
		 		}
		 		counter++;
			}

	}
	
    public boolean someLibraryMethod(){
    	int zero = 0; // Used for TA Demo. Dunno what else this is used for (Maybe created by default???)
        return true;
    }
}